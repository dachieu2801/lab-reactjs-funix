{"ast":null,"code":"var _jsxFileName = \"F:\\\\lap js\\\\Assignment 01 (Starter Code)\\\\src\\\\components\\\\DateRange\\\\DateRange.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\nimport './DateRange.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DateRanges(props) {\n  _s();\n  const [isSalender, setIsSalender] = useState(false);\n  const [dateRange, setDateRange] = useState([{\n    startDate: new Date(),\n    endDate: new Date(),\n    key: 'selection'\n  }]);\n  const handleSelect = date => {\n    setDateRange([date.selection]);\n  };\n  const handleClick = () => {\n    setIsSalender(isSalender => !isSalender);\n  };\n  let startDate = dateRange[0].startDate;\n  let endDate = dateRange[0].endDate;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: handleClick,\n      className: \"input-dateRange\",\n      readOnly: true,\n      size: pr,\n      value: `${startDate.getMonth() + 1}/${startDate.getDate()}/${startDate.getFullYear()}  to  ${endDate.getMonth() + 1}/${endDate.getDate()}/${endDate.getFullYear()}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), isSalender && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dateRange\",\n      children: /*#__PURE__*/_jsxDEV(DateRange, {\n        editableDateInputs: true,\n        moveRangeOnFirstSelection: false,\n        className: \"date\",\n        minDate: new Date(),\n        onChange: handleSelect,\n        ranges: dateRange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(DateRanges, \"izmkynySdlhRQO4biWYSU+hJJ3U=\");\n_c = DateRanges;\nexport default DateRanges;\nvar _c;\n$RefreshReg$(_c, \"DateRanges\");","map":{"version":3,"names":["React","useState","DateRange","jsxDEV","_jsxDEV","DateRanges","props","_s","isSalender","setIsSalender","dateRange","setDateRange","startDate","Date","endDate","key","handleSelect","date","selection","handleClick","style","position","children","onClick","className","readOnly","size","pr","value","getMonth","getDate","getFullYear","fileName","_jsxFileName","lineNumber","columnNumber","editableDateInputs","moveRangeOnFirstSelection","minDate","onChange","ranges","_c","$RefreshReg$"],"sources":["F:/lap js/Assignment 01 (Starter Code)/src/components/DateRange/DateRange.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { DateRange } from 'react-date-range';\r\n\r\nimport 'react-date-range/dist/styles.css';\r\nimport 'react-date-range/dist/theme/default.css';\r\nimport './DateRange.css'\r\nfunction DateRanges(props) {\r\n  const [isSalender, setIsSalender] = useState(false)\r\n  const [dateRange, setDateRange] = useState([\r\n    {\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      key: 'selection'\r\n    }\r\n  ])\r\n  const handleSelect = (date) => {\r\n    setDateRange([date.selection])\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setIsSalender(isSalender => !isSalender)\r\n  }\r\n\r\n  let startDate = dateRange[0].startDate\r\n  let endDate = dateRange[0].endDate\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <input\r\n        onClick={handleClick}\r\n        className='input-dateRange'\r\n        readOnly\r\n        size={pr}\r\n        value={`${startDate.getMonth() + 1}/${startDate.getDate()}/${startDate.getFullYear()}  to  ${endDate.getMonth() + 1}/${endDate.getDate()}/${endDate.getFullYear()}`}\r\n      />\r\n      {\r\n        isSalender &&\r\n        <div className='dateRange'>\r\n          <DateRange\r\n            editableDateInputs={true}\r\n            moveRangeOnFirstSelection={false}\r\n            className=\"date\"\r\n            minDate={new Date()}\r\n            onChange={handleSelect}\r\n            ranges={dateRange}\r\n          />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DateRanges\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAO,kCAAkC;AACzC,OAAO,yCAAyC;AAChD,OAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACxB,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CACzC;IACEW,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;IACrBC,OAAO,EAAE,IAAID,IAAI,CAAC,CAAC;IACnBE,GAAG,EAAE;EACP,CAAC,CACF,CAAC;EACF,MAAMC,YAAY,GAAIC,IAAI,IAAK;IAC7BN,YAAY,CAAC,CAACM,IAAI,CAACC,SAAS,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBV,aAAa,CAACD,UAAU,IAAI,CAACA,UAAU,CAAC;EAC1C,CAAC;EAED,IAAII,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,CAACE,SAAS;EACtC,IAAIE,OAAO,GAAGJ,SAAS,CAAC,CAAC,CAAC,CAACI,OAAO;EAElC,oBACEV,OAAA;IAAKgB,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAW,CAAE;IAAAC,QAAA,gBACnClB,OAAA;MACEmB,OAAO,EAAEJ,WAAY;MACrBK,SAAS,EAAC,iBAAiB;MAC3BC,QAAQ;MACRC,IAAI,EAAEC,EAAG;MACTC,KAAK,EAAG,GAAEhB,SAAS,CAACiB,QAAQ,CAAC,CAAC,GAAG,CAAE,IAAGjB,SAAS,CAACkB,OAAO,CAAC,CAAE,IAAGlB,SAAS,CAACmB,WAAW,CAAC,CAAE,SAAQjB,OAAO,CAACe,QAAQ,CAAC,CAAC,GAAG,CAAE,IAAGf,OAAO,CAACgB,OAAO,CAAC,CAAE,IAAGhB,OAAO,CAACiB,WAAW,CAAC,CAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrK,CAAC,EAEA3B,UAAU,iBACVJ,OAAA;MAAKoB,SAAS,EAAC,WAAW;MAAAF,QAAA,eACxBlB,OAAA,CAACF,SAAS;QACRkC,kBAAkB,EAAE,IAAK;QACzBC,yBAAyB,EAAE,KAAM;QACjCb,SAAS,EAAC,MAAM;QAChBc,OAAO,EAAE,IAAIzB,IAAI,CAAC,CAAE;QACpB0B,QAAQ,EAAEvB,YAAa;QACvBwB,MAAM,EAAE9B;MAAU;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEV;AAAC5B,EAAA,CA5CQF,UAAU;AAAAoC,EAAA,GAAVpC,UAAU;AA8CnB,eAAeA,UAAU;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}